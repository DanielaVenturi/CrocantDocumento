-- MySQL Script generated by MySQL Workbench
-- Thu Jul 25 08:27:09 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`usuário`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuário` (
  `pk_senha_usuario` INT NOT NULL,
  `pk_idusuário` INT NOT NULL AUTO_INCREMENT,
  `nome_completo_usuario` VARCHAR(100) NOT NULL,
  `data_nascimento_usuario` DATE NOT NULL,
  `endereco` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`pk_senha_usuario`, `pk_idusuário`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `pk_idproduto` INT NOT NULL,
  `usuário_pk_senha_usuario` INT NOT NULL,
  `usuário_pk_idusuário` INT NOT NULL,
  `nome_produto` VARCHAR(255) NULL,
  `descricao_produto` TEXT NULL,
  `preco` DECIMAL(10,2) NULL,
  `categoria` VARCHAR(45) NULL,
  PRIMARY KEY (`pk_idproduto`),
  INDEX `fk_produto_usuário1_idx` (`usuário_pk_senha_usuario` ASC, `usuário_pk_idusuário` ASC) VISIBLE,
  CONSTRAINT `fk_produto_usuário1`
    FOREIGN KEY (`usuário_pk_senha_usuario` , `usuário_pk_idusuário`)
    REFERENCES `mydb`.`usuário` (`pk_senha_usuario` , `pk_idusuário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`categoria` (
  `pk_id_categoria` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `nome_categoria` VARCHAR(255) NULL,
  PRIMARY KEY (`pk_id_categoria`));


-- -----------------------------------------------------
-- Table `mydb`.`estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estados` (
  `pk_idestados` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `nome_estado` VARCHAR(50) NOT NULL,
  `sigla_estado` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`pk_idestados`));


-- -----------------------------------------------------
-- Table `mydb`.`cidades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cidades` (
  `pk_idcidades` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `estados_pk_idestados` INT NOT NULL,
  `nome_cidade` VARCHAR(45) NULL,
  PRIMARY KEY (`pk_idcidades`),
  INDEX `fk_cidades_estados1_idx` (`estados_pk_idestados` ASC) VISIBLE,
  CONSTRAINT `fk_cidades_estados1`
    FOREIGN KEY (`estados_pk_idestados`)
    REFERENCES `mydb`.`estados` (`pk_idestados`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`endereco_entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`endereco_entrega` (
  `pk_idendereco_entrega` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `CEP` INT NOT NULL,
  `usuário_pk_senha_usuario` INT NOT NULL,
  `usuário_pk_idusuário` INT NOT NULL,
  `cidades_pk_idcidades` INT NOT NULL,
  `Rua_endereco` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`pk_idendereco_entrega`, `CEP`),
  INDEX `fk_endereço_entrega_usuário1_idx` (`usuário_pk_senha_usuario` ASC, `usuário_pk_idusuário` ASC) VISIBLE,
  INDEX `fk_endereço_entrega_cidades1_idx` (`cidades_pk_idcidades` ASC) VISIBLE,
  CONSTRAINT `fk_endereço_entrega_usuário1`
    FOREIGN KEY (`usuário_pk_senha_usuario` , `usuário_pk_idusuário`)
    REFERENCES `mydb`.`usuário` (`pk_senha_usuario` , `pk_idusuário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_endereço_entrega_cidades1`
    FOREIGN KEY (`cidades_pk_idcidades`)
    REFERENCES `mydb`.`cidades` (`pk_idcidades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedidos` (
  `pk_idpedidos` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `usuário_pk_senha_usuario` INT NOT NULL,
  `usuário_pk_idusuário` INT NOT NULL,
  `data_pedido` DATE NOT NULL,
  PRIMARY KEY (`pk_idpedidos`),
  INDEX `fk_pedidos_usuário1_idx` (`usuário_pk_senha_usuario` ASC, `usuário_pk_idusuário` ASC) VISIBLE,
  CONSTRAINT `fk_pedidos_usuário1`
    FOREIGN KEY (`usuário_pk_senha_usuario` , `usuário_pk_idusuário`)
    REFERENCES `mydb`.`usuário` (`pk_senha_usuario` , `pk_idusuário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`produto_has_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto_has_categoria` (
  `produto_pk_id_produto` INT NOT NULL,
  `categoria_pk_id_categoria` INT NOT NULL,
  PRIMARY KEY (`produto_pk_id_produto`, `categoria_pk_id_categoria`),
  INDEX `fk_produto_has_categoria_categoria1_idx` (`categoria_pk_id_categoria` ASC) VISIBLE,
  INDEX `fk_produto_has_categoria_produto_idx` (`produto_pk_id_produto` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_categoria_produto`
    FOREIGN KEY (`produto_pk_id_produto`)
    REFERENCES `mydb`.`produto` (`pk_idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_categoria_categoria1`
    FOREIGN KEY (`categoria_pk_id_categoria`)
    REFERENCES `mydb`.`categoria` (`pk_id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`produto_has_pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto_has_pedidos` (
  `produto_pk_id_produto` INT NOT NULL,
  `pedidos_pk_idpedidos` INT NOT NULL,
  `quantidade_pedido` INT NULL,
  `produto_has_pedidoscol` VARCHAR(45) NULL,
  PRIMARY KEY (`produto_pk_id_produto`, `pedidos_pk_idpedidos`),
  INDEX `fk_produto_has_pedidos_pedidos1_idx` (`pedidos_pk_idpedidos` ASC) VISIBLE,
  INDEX `fk_produto_has_pedidos_produto1_idx` (`produto_pk_id_produto` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_pedidos_produto1`
    FOREIGN KEY (`produto_pk_id_produto`)
    REFERENCES `mydb`.`produto` (`pk_idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_pedidos_pedidos1`
    FOREIGN KEY (`pedidos_pk_idpedidos`)
    REFERENCES `mydb`.`pedidos` (`pk_idpedidos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`venda` (
  `pk_idvendas` INT NOT NULL,
  `usuário_pk_senha_usuario` INT NOT NULL,
  `usuário_pk_idusuário` INT NOT NULL,
  `produto_pk_idproduto` INT NOT NULL,
  PRIMARY KEY (`pk_idvendas`),
  INDEX `fk_venda_usuário1_idx` (`usuário_pk_senha_usuario` ASC, `usuário_pk_idusuário` ASC) VISIBLE,
  INDEX `fk_venda_produto1_idx` (`produto_pk_idproduto` ASC) VISIBLE,
  CONSTRAINT `fk_venda_usuário1`
    FOREIGN KEY (`usuário_pk_senha_usuario` , `usuário_pk_idusuário`)
    REFERENCES `mydb`.`usuário` (`pk_senha_usuario` , `pk_idusuário`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_venda_produto1`
    FOREIGN KEY (`produto_pk_idproduto`)
    REFERENCES `mydb`.`produto` (`pk_idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`registro_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`registro_pagamento` (
  `pk_igpagamento` INT NOT NULL,
  `pedidos_pk_idpedidos` INT NOT NULL,
  `metodo_pagamento` VARCHAR(45) NOT NULL,
  `valor_pagamento` DECIMAL(10,2) NOT NULL,
  `data_pagamento` DATE NOT NULL,
  PRIMARY KEY (`pk_igpagamento`),
  INDEX `fk_registro_pagamento_pedidos1_idx` (`pedidos_pk_idpedidos` ASC) VISIBLE,
  CONSTRAINT `fk_registro_pagamento_pedidos1`
    FOREIGN KEY (`pedidos_pk_idpedidos`)
    REFERENCES `mydb`.`pedidos` (`pk_idpedidos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`tamanho`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tamanho` (
  `pk_idtamanho` INT NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `numero_tamanho` INT NOT NULL,
  PRIMARY KEY (`pk_idtamanho`));


-- -----------------------------------------------------
-- Table `mydb`.`tamanho_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tamanho_has_produto` (
  `tamanho_pk_idtamanho` INT NOT NULL,
  `produto_pk_idproduto` INT NOT NULL,
  PRIMARY KEY (`tamanho_pk_idtamanho`, `produto_pk_idproduto`),
  INDEX `fk_tamanho_has_produto_produto1_idx` (`produto_pk_idproduto` ASC) VISIBLE,
  INDEX `fk_tamanho_has_produto_tamanho1_idx` (`tamanho_pk_idtamanho` ASC) VISIBLE,
  CONSTRAINT `fk_tamanho_has_produto_tamanho1`
    FOREIGN KEY (`tamanho_pk_idtamanho`)
    REFERENCES `mydb`.`tamanho` (`pk_idtamanho`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tamanho_has_produto_produto1`
    FOREIGN KEY (`produto_pk_idproduto`)
    REFERENCES `mydb`.`produto` (`pk_idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
